---
import { cn } from "../lib/utils";
import { Image } from 'astro:assets';

// Define the types for carousel images
interface CarouselImage {
  src: string | ImageMetadata;
  alt: string;
  title?: string;
  description?: string;
}

// Define the props interface
interface Props {
  carouselImages?: CarouselImage[];
  heroDesktopUrl?: string;
  heroMobileUrl?: string;
}

// Get props with defaults
const { 
  carouselImages = [],
  heroDesktopUrl,
  heroMobileUrl
} = Astro.props;

// Define slide content for each slide
const slideContent = [
  {
    title: "Servicii premium de consultanță auto",
    description: "Expertiza noastră, mașina visurilor tale. Spune-ne ce îți dorești, și noi îți găsim mașina perfectă."
  },
  {
    title: "Consultanță auto personalizată",
    description: "Eliminăm stresul achiziției. Verificăm istoricul mașinii, negociem prețul și te ghidăm în tot procesul."
  },
  {
    title: "Mașini premium verificate",
    description: "Acces la cele mai bune oferte de pe piață. Alegem doar vehicule cu istoric transparent și documentație completă."
  }
];

// Determine if we're using the carousel images or static hero images
const images = carouselImages.length > 0 ? carouselImages : [
  { 
    src: heroDesktopUrl || '/images/hero-default.jpg', 
    alt: "Default hero image"
  }
];
---

<section class="relative h-screen overflow-hidden">
  <!-- Carousel Container -->
  <div class="embla overflow-hidden h-full">
    <div class="embla__viewport h-full">
      <div class="embla__container h-full flex">
        {images.map((img, index) => (
          <div class="embla__slide relative flex-[0_0_100%] h-full">
            {typeof img.src === 'string' ? (
              <div 
                class="absolute inset-0 bg-cover bg-center bg-no-repeat animate-fade-in" 
                style={`background-image: url(${img.src})`}
                aria-label={img.alt}
              ></div>
            ) : (
              <Image 
                src={img.src}
                alt={img.alt}
                width={1920}
                height={1080}
                format="webp"
                quality={80}
                class="object-cover w-full h-full absolute inset-0 animate-fade-in"
              />
            )}
            <!-- Overlay -->
            <div class="absolute inset-0 bg-black/50"></div>
          </div>
        ))}
      </div>
    </div>

    <!-- Carousel Navigation Buttons -->
    <button class="embla__prev absolute left-5 top-1/2 -translate-y-1/2 z-10 p-3 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white hover:bg-white/20 transition">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5"><polyline points="15 18 9 12 15 6"></polyline></svg>
    </button>
    
    <button class="embla__next absolute right-5 top-1/2 -translate-y-1/2 z-10 p-3 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white hover:bg-white/20 transition">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5"><polyline points="9 18 15 12 9 6"></polyline></svg>
    </button>
  </div>
  
  <!-- Content -->
  <div class="absolute top-0 left-0 right-0 bottom-0 z-10 flex items-center">
    <div class="container mx-auto px-4 md:px-6">
      <div class="max-w-3xl mx-auto text-center text-white">
        <h1 id="slide-title" class="text-3xl md:text-4xl lg:text-5xl font-bold mb-4 animate-slide-up">
          {slideContent[0].title}
        </h1>
        <p id="slide-description" class="text-lg md:text-xl text-gray-200 mb-8 animate-slide-up animation-delay-100">
          {slideContent[0].description}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center animate-slide-up animation-delay-200">
          <button 
            onclick="window.scrollToForm && window.scrollToForm()"
            class="bg-primary text-white px-6 py-3 rounded-full font-medium hover:bg-primary/90 transition-colors inline-flex items-center justify-center"
          >
            Solicită Consultanță Gratuită
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 ml-2"><polyline points="9 18 15 12 9 6"></polyline></svg>
          </button>
          <a 
            href="/about" 
            class="bg-white/10 backdrop-blur-sm border border-white/20 text-white px-6 py-3 rounded-full font-medium hover:bg-white/20 transition-colors inline-flex items-center justify-center"
          >
            Află Mai Multe
          </a>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Dots Navigation -->
  <div class="absolute bottom-8 left-0 right-0 z-10">
    <div class="container mx-auto px-4">
      <div class="flex justify-center">
        <div class="embla__dots flex space-x-2">
          {images.map((_, i) => (
            <button class={`embla__dot w-3 h-3 rounded-full ${i === 0 ? 'bg-white' : 'bg-white/50'}`}></button>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Carousel functionality using Embla Carousel
  let currentIndex = 0;
  let autoplayTimer: number | null = null;
  const slideContent = [
    {
      title: "Servicii premium de consultanță auto",
      description: "Expertiza noastră, mașina visurilor tale. Spune-ne ce îți dorești, și noi îți găsim mașina perfectă."
    },
    {
      title: "Consultanță auto personalizată",
      description: "Eliminăm stresul achiziției. Verificăm istoricul mașinii, negociem prețul și te ghidăm în tot procesul."
    },
    {
      title: "Mașini premium verificate",
      description: "Acces la cele mai bune oferte de pe piață. Alegem doar vehicule cu istoric transparent și documentație completă."
    }
  ];

  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const viewportNode = document.querySelector('.embla__viewport');
    const prevButtonNode = document.querySelector('.embla__prev');
    const nextButtonNode = document.querySelector('.embla__next');
    const dotsNode = document.querySelector('.embla__dots');
    const titleNode = document.getElementById('slide-title');
    const descriptionNode = document.getElementById('slide-description');
    
    if (!viewportNode) return;
    
    let emblaApi: any;
    
    try {
      // @ts-ignore - Embla will be loaded via CDN
      emblaApi = EmblaCarousel(viewportNode, { loop: true });
      
      if (prevButtonNode && nextButtonNode) {
        prevButtonNode.addEventListener('click', () => {
          emblaApi.scrollPrev();
          resetAutoplay();
        });
        
        nextButtonNode.addEventListener('click', () => {
          emblaApi.scrollNext();
          resetAutoplay();
        });
      }
      
      // Set up dots
      if (dotsNode) {
        const dots = Array.from(dotsNode.querySelectorAll('.embla__dot'));
        
        dots.forEach((dot, index) => {
          dot.addEventListener('click', () => {
            emblaApi.scrollTo(index);
            resetAutoplay();
          });
        });
        
        emblaApi.on('select', () => {
          currentIndex = emblaApi.selectedScrollSnap();
          dots.forEach((dot, index) => {
            if (index === currentIndex) {
              dot.classList.remove('bg-white/50');
              dot.classList.add('bg-white');
            } else {
              dot.classList.remove('bg-white');
              dot.classList.add('bg-white/50');
            }
          });
          
          // Update content text
          updateContent();
        });
      }
      
      // Set up autoplay
      startAutoplay();
    } catch (error) {
      console.error('Error initializing carousel:', error);
    }
    
    function startAutoplay() {
      autoplayTimer = window.setInterval(() => {
        if (emblaApi) emblaApi.scrollNext();
      }, 6000); // Change slide every 6 seconds
    }
    
    function resetAutoplay() {
      if (autoplayTimer) {
        clearInterval(autoplayTimer);
        startAutoplay();
      }
    }
    
    function updateContent() {
      if (titleNode && descriptionNode && currentIndex < slideContent.length) {
        // Add exit animation
        titleNode.classList.remove('animate-slide-up');
        descriptionNode.classList.remove('animate-slide-up');
        
        // Force reflow
        void titleNode.offsetWidth;
        
        // Update content
        titleNode.textContent = slideContent[currentIndex].title;
        descriptionNode.textContent = slideContent[currentIndex].description;
        
        // Add entrance animation
        titleNode.classList.add('animate-slide-up');
        descriptionNode.classList.add('animate-slide-up');
      }
    }
  });
</script>

<script is:inline>
  // Load Embla Carousel from CDN
  document.addEventListener('DOMContentLoaded', function() {
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/embla-carousel/embla-carousel.umd.js';
    script.async = true;
    document.head.appendChild(script);
  });
</script> 